<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CentOS 7 x64 利用宝塔安装gitea</title>
    <link href="/2020/10/25/CentOS-7-x64-%E5%88%A9%E7%94%A8%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85gitea/"/>
    <url>/2020/10/25/CentOS-7-x64-%E5%88%A9%E7%94%A8%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85gitea/</url>
    
    <content type="html"><![CDATA[<h2 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h2><ul><li><p>准备域名并解析到服务器IP（code.demo.com –&gt; <code>IP</code>)</p></li><li><p>确保宝塔已经安装并安装好lnmp环境</p></li><li><p>确保mySQL版本至少为5.5.3</p></li><li><p>安装git</p></li><li><p>首先检查CentOS 7系统中安装的git版本：</p><pre><code class="hljs shell">git --version</code></pre><p>git version 1.8.3.1</p></li></ul><p>  <strong>从IUS存储库安装git的方法</strong></p><p>  IUS是一个社区项目，为Enterprise Linux发行版的新版精选软件提供RPM包，该项目的目的是为红帽企业Linux（RHEL）和CentOS创建高质量的RPM包。</p><p>  1、删除旧的git：</p>  <pre><code class="hljs shell">sudo yum remove git</code></pre><p>  2、添加IUS CentOS 7 repo：</p>  <pre><code class="hljs shell">sudo yum install  https://centos7.iuscommunity.org/ius-release.rpmsudo yum install  git2u-all</code></pre><p>  安装git2u-all软件包后检查git版本：</p>  <pre><code class="hljs shell">git --version</code></pre><p>  git version 2.16.5</p><p>  如上所述，当前版本Git是2.16.5，如果要安装最新的Git版本，最好是下载源代码并安装。</p><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><ul><li><p>在宝塔中新建网站code.demo.com，创建数据库MySQL，字符集选择utf8_general_ci</p><p><img src="Snipaste_2020-02-22_12-01-26.png" alt="Snipaste_2020-02-22_12-01-26"></p><p>远程下载gitea</p><pre><code class="hljs shell">cd /www/wwwroot/code.demo.com/wget -O gitea https://dl.gitea.io/gitea/master/gitea-master-linux-amd64chmod +x gitea</code></pre><p>成功之后运行gitea，访问<code>http://ip:3000</code>即可测试。</p><pre><code class="hljs shell">./gitea web</code></pre></li></ul><ul><li>在DNS服务商处绑定code.demo.com到服务器IP地址后，打开宝塔面板网站的SSL，使用Let’s Encrypt进行证书签名</li></ul><p><img src="Snipaste_2020-02-25_21-54-52.png" alt="Snipaste_2020-02-25_21-54-52"></p><ul><li>接着打开宝塔网站的配置文件，示例配置文件内容如下：</li></ul><pre><code class="hljs shell">server&#123;listen 443 ssl http2;listen 80;  client_max_body_size 100000m;    server_name code.demo.com;    index index.php index.html index.htm default.php default.htm default.html;    root /www/wwwroot/code.demo.com;        #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则    #error_page 404/404.html;    #HTTP_TO_HTTPS_START    if ($server_port !~ 443)&#123;        rewrite ^(/.*)$ https://$host$1 permanent;    &#125;    #HTTP_TO_HTTPS_END    ssl_certificate    /www/server/panel/vhost/cert/code.demo.com/fullchain.pem;    ssl_certificate_key    /www/server/panel/vhost/cert/code.demo.com/privkey.pem;    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;    ssl_prefer_server_ciphers on;    ssl_session_cache shared:SSL:10m;    ssl_session_timeout 10m;    error_page 497  https://$host$request_uri;    #SSL-END        #ERROR-PAGE-START  错误页配置，可以注释、删除或修改    #error_page 404 /404.html;    #error_page 502 /502.html;    #ERROR-PAGE-END        #PHP-INFO-START  PHP引用配置，可以注释或修改    # include enable-php-00.conf;    #PHP-INFO-END        #REWRITE-START URL重写规则引用,修改后将导致面板设置的伪静态规则失效    # include /www/server/panel/vhost/rewrite/code.demo.com.conf;    #REWRITE-END        #禁止访问的文件或目录    location ~ ^/(\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md)    &#123;        return 404;    &#125;        #一键申请SSL证书验证目录相关设置    location ~ \.well-known&#123;        allow all;    &#125;        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|ico)$    &#123;        expires      30d;        error_log off;        access_log /dev/null;        proxy_pass http://127.0.0.1:3000;    &#125;        location ~ .*\.(js|css)?$    &#123;        expires      12h;        error_log off;        access_log /dev/null;         proxy_pass http://127.0.0.1:3000;    &#125;        location / &#123;        proxy_pass      http://127.0.0.1:3000;        proxy_redirect      off;        proxy_set_header Host      $host;        proxy_set_header X-Real-IP $remote_addr;        &#125;        access_log  /www/wwwlogs/code.demo.com.log;    error_log  /www/wwwlogs/code.demo.com.error.log;    &#125;</code></pre><p>其中<code>proxy_pass        http://127.0.0.1:3000</code>用来代理访问3000端口的请求。</p><ul><li>新建一个systemd服务文件，内容如下：</li></ul><pre><code class="hljs shell">[unit]Description=Gitea (Git with a cup of tea)After=syslog.targetAfter=network.targetAfter=mysqld.service<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">##</span></span><span class="hljs-meta">#</span><span class="bash"> Don<span class="hljs-string">&#x27;t forget to add the database service requirements</span></span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">##</span></span><span class="hljs-meta">#</span><span class="hljs-meta">#</span><span class="bash">Requires=mysql.service</span><span class="hljs-meta">#</span><span class="bash">Requires=mariadb.service</span><span class="hljs-meta">#</span><span class="bash">Requires=postgresql.service</span><span class="hljs-meta">#</span><span class="bash">Requires=memcached.service</span><span class="hljs-meta">#</span><span class="bash">Requires=redis.service</span><span class="hljs-meta">#</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">##</span></span><span class="hljs-meta">#</span><span class="bash"> If using socket activation <span class="hljs-keyword">for</span> main http/s</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">##</span></span><span class="hljs-meta">#</span><span class="hljs-meta">#</span><span class="bash">After=gitea.main.socket</span><span class="hljs-meta">#</span><span class="bash">Requires=gitea.main.socket</span><span class="hljs-meta">#</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">##</span></span><span class="hljs-meta">#</span><span class="bash"> (You can also provide gitea an http fallback and/or ssh socket too)</span><span class="hljs-meta">#</span><span class="hljs-meta">#</span><span class="bash"> An example of /etc/systemd/system/gitea.main.socket</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">##</span></span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#</span></span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># [Unit]</span></span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># Description=Gitea Web Socket</span></span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># PartOf=gitea.service</span></span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#</span></span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># [Socket]</span></span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># Service=gitea.service</span></span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># ListenStream=&lt;some_port&gt;</span></span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># NoDelay=true</span></span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#</span></span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># [Install]</span></span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># WantedBy=sockets.target</span></span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#</span></span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">##</span></span>[Service]<span class="hljs-meta">#</span><span class="bash"> Modify these two values and uncomment them <span class="hljs-keyword">if</span> you have</span><span class="hljs-meta">#</span><span class="bash"> repos with lots of files and get an HTTP error 500 because</span><span class="hljs-meta">#</span><span class="bash"> of that</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">##</span></span><span class="hljs-meta">#</span><span class="bash">LimitMEMLOCK=infinity</span><span class="hljs-meta">#</span><span class="bash">LimitNOFILE=65535</span>RestartSec=2sType=simpleUser=rootGroup=rootWorkingDirectory=/www/wwwroot/code.demo.com/<span class="hljs-meta">#</span><span class="bash"> If using Unix socket: tells systemd to create the /run/gitea folder, <span class="hljs-built_in">which</span> will contain the gitea.sock file</span><span class="hljs-meta">#</span><span class="bash"> (manually creating /run/gitea doesn<span class="hljs-string">&#x27;t work, because it would not persist across reboots)</span></span><span class="hljs-meta">#</span><span class="bash">RuntimeDirectory=gitea</span>ExecStart=/www/wwwroot/code.demo.com/gitea web --config /www/wwwroot/code.demo.com/custom/conf/app.iniRestart=alwaysEnvironment=USER=root HOME=/home/ GITEA_WORK_DIR=/www/wwwroot/code.demo.com/<span class="hljs-meta">#</span><span class="bash"> If you want to <span class="hljs-built_in">bind</span> Gitea to a port below 1024, uncomment</span><span class="hljs-meta">#</span><span class="bash"> the two values below, or use socket activation to pass Gitea its ports as above</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">##</span></span><span class="hljs-meta">#</span><span class="bash">CapabilityBoundingSet=CAP_NET_BIND_SERVICE</span><span class="hljs-meta">#</span><span class="bash">AmbientCapabilities=CAP_NET_BIND_SERVICE</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">##</span></span>[Install]WantedBy=multi-user.target</code></pre><p>修改完毕后输入<code>:wq</code>退出vim编辑器。</p><p>启动gitea并设置开机自动启动：</p><pre><code class="hljs shell">systemctl start giteasystemctl enable gitea</code></pre><p>待以上步骤完成后，ssh到服务器重载设置文件并重启nginx服务：</p><pre><code class="hljs shell">sudo /etc/init.d/nginx reloadsudo /etc/init.d/nginx stopsudo /etc/init.d/nginx start</code></pre><p>现在打开浏览器访问 <a href="https://code.demo.com/">https://code.demo.com</a> 即可进行gitea的安装过程了。</p>]]></content>
    
    
    <categories>
      
      <category>仓库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CentOS</tag>
      
      <tag>宝塔</tag>
      
      <tag>gitea</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/10/25/hello-world/"/>
    <url>/2020/10/25/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
